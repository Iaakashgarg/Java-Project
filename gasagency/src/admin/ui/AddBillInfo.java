/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.dao.BillInfoDAO;
import model.dao.CustomerInfoDAO;
import model.dao.CylinderInfoDAO;
import model.to.BillInfoTO;
import model.to.CustomerInfoTO;
import model.to.CylinderInfoTO;
import operational.Checks;

/**
 *
 * @author Grapess
 */
public class AddBillInfo extends javax.swing.JInternalFrame {

    public AddBillInfo() {
        initComponents();
        setSize(850,600);
        bindCustomerInfo();
    }
    private void bindCustomerInfo(){
        jcbCustomerInfo.removeAllItems();
        jcbCustomerInfo.addItem("Select A Customer");
        ArrayList<CustomerInfoTO> allCustomers = new CustomerInfoDAO().getAllRecord();
        if(allCustomers!=null){
            for(CustomerInfoTO cit : allCustomers){
                jcbCustomerInfo.addItem(cit);
            }
        }
                
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jcbCylinderInfo = new javax.swing.JComboBox();
        jcbCustomerInfo = new javax.swing.JComboBox();
        jtfPrice = new javax.swing.JTextField();
        jtfCylinderNo = new javax.swing.JTextField();
        jtfQuantity = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add Bill Info");
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Enter Quantity :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 250, 290, 29);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Choose Customer :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 40, 290, 29);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Choose Cylinder  :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 110, 290, 29);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Enter Cylinder No :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 180, 290, 29);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Enter Price :");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 320, 290, 29);

        jcbCylinderInfo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbCylinderInfo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCylinderInfoItemStateChanged(evt);
            }
        });
        getContentPane().add(jcbCylinderInfo);
        jcbCylinderInfo.setBounds(300, 110, 300, 30);

        jcbCustomerInfo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbCustomerInfo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCustomerInfoItemStateChanged(evt);
            }
        });
        getContentPane().add(jcbCustomerInfo);
        jcbCustomerInfo.setBounds(300, 40, 300, 30);

        jtfPrice.setEditable(false);
        jtfPrice.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jtfPrice);
        jtfPrice.setBounds(300, 320, 300, 30);

        jtfCylinderNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCylinderNoKeyTyped(evt);
            }
        });
        getContentPane().add(jtfCylinderNo);
        jtfCylinderNo.setBounds(300, 180, 300, 30);

        jtfQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfQuantityKeyTyped(evt);
            }
        });
        getContentPane().add(jtfQuantity);
        jtfQuantity.setBounds(300, 250, 300, 30);

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btnAdd.setText("Add Bill Info");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(170, 380, 440, 60);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbCustomerInfoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCustomerInfoItemStateChanged
        try{
            jcbCylinderInfo.removeAllItems();
            jcbCylinderInfo.addItem("Select A Cylinder");
            if(jcbCustomerInfo.getSelectedItem() instanceof CustomerInfoTO){
                CustomerInfoTO cit = (CustomerInfoTO)jcbCustomerInfo.getSelectedItem();
                ArrayList<CylinderInfoTO> allCylinder = new CylinderInfoDAO().getAllRecord(cit.getTypeID());
                if(allCylinder!=null){
                    for(CylinderInfoTO citdata : allCylinder){
                        jcbCylinderInfo.addItem(citdata);
                    }
                }
            }
        }catch(Exception ex){
            
        }
    }//GEN-LAST:event_jcbCustomerInfoItemStateChanged

    private void jtfCylinderNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCylinderNoKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            if (evt.getKeyChar() != '\b') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtfCylinderNoKeyTyped

    private void jtfQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfQuantityKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            if (evt.getKeyChar() != '\b') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtfQuantityKeyTyped

    private void jcbCylinderInfoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCylinderInfoItemStateChanged
        try{
            if(jcbCylinderInfo.getSelectedItem() instanceof CylinderInfoTO){
                CylinderInfoTO cit = (CylinderInfoTO)jcbCylinderInfo.getSelectedItem();
                jtfPrice.setText(String.valueOf(cit.getPrice()));
            }else{
                jtfPrice.setText("");
            }
        }catch(Exception ex){
            
        }
    }//GEN-LAST:event_jcbCylinderInfoItemStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String message = "";
        try{
            String cylinderno = jtfCylinderNo.getText().trim();
            String quantity = jtfQuantity.getText().trim();
            String price = jtfPrice.getText().trim();
            if(Checks.isEmpty(cylinderno) || Checks.isEmpty(quantity) || Checks.isEmpty(price)){
                message = "Please Fill All Boxes";
            }else if(!(jcbCustomerInfo.getSelectedItem() instanceof CustomerInfoTO && jcbCylinderInfo.getSelectedItem() instanceof CylinderInfoTO)){
                message = "Please Select any Customer and Cylinder";
            }else if(Checks.isNumeric(quantity) && Checks.isFloatNumeric(price)){
                CustomerInfoTO cust = (CustomerInfoTO)jcbCustomerInfo.getSelectedItem();
                CylinderInfoTO cit = (CylinderInfoTO)jcbCylinderInfo.getSelectedItem();
                BillInfoTO data = new BillInfoTO();
                data.setCustomerID(cust.getCustomerID());
                data.setCylinderID(cit.getCylinderID());
                data.setCylinderNo(cylinderno);
                int qty = Integer.parseInt(quantity);
                data.setQuantity(qty);
                data.setPrice(Float.parseFloat(price));
                BillInfoDAO action = new BillInfoDAO();
                if(qty > cust.getNoOfCylinder()){
                    message = " You are Allowed Only " + cust.getNoOfCylinder() + " in a Month ";
                }else{
                    int totalPurchase = action.getTotalCylinder(cust.getCustomerID());
                    if(totalPurchase + qty > cust.getNoOfCylinder()){
                        message = " You are already " + totalPurchase + " Cylinder taken in a Month ";
                    }else{
                        if(action.insertRecord(data)){
                            message = "Bill Is Generated";
                        }else{
                            message = action.getErrorMessage();
                        }
                    }
                }
            }else{
                message = "Please Enter Numeric Values in quantity and price box";
            }
        }catch(Exception ex){
            message = ex.getMessage();
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnAddActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox jcbCustomerInfo;
    private javax.swing.JComboBox jcbCylinderInfo;
    private javax.swing.JTextField jtfCylinderNo;
    private javax.swing.JTextField jtfPrice;
    private javax.swing.JTextField jtfQuantity;
    // End of variables declaration//GEN-END:variables
}
