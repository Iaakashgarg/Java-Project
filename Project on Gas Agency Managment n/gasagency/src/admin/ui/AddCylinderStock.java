/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package admin.ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.dao.CylinderInfoDAO;
import model.dao.CylinderStockDAO;
import model.to.CylinderInfoTO;
import model.to.CylinderStockTO;
import operational.Checks;

/**
 *
 * @author Grapess
 */
public class AddCylinderStock extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddCylinderStock
     */
    public AddCylinderStock() {
        initComponents();
        setSize(850, 600);
        jcbCylinderInfo.removeAllItems();
        jcbCylinderStatus.removeAllItems();
        jcbStockType.removeAllItems();
        jcbCylinderInfo.addItem("Select A Cylinder");
        jcbCylinderStatus.addItem("Select A Cylinder Status");
        jcbStockType.addItem("Select A Stock Type");
        jcbCylinderStatus.addItem("Fill");
        jcbCylinderStatus.addItem("Empty");
        jcbStockType.addItem("IN");
        jcbStockType.addItem("OUT");
        ArrayList<CylinderInfoTO> allCylinders = new CylinderInfoDAO().getAllRecord();
        if (allCylinders != null) {
            for (CylinderInfoTO ctt : allCylinders) {
                jcbCylinderInfo.addItem(ctt);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbCylinderStatus = new javax.swing.JComboBox();
        jcbCylinderInfo = new javax.swing.JComboBox();
        jcbStockType = new javax.swing.JComboBox();
        jtfQuantity = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Add Cylinder Stock");
        getContentPane().setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Enter Quantity :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 250, 300, 29);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Choose Cylinder :");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 40, 300, 29);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Choose Stock Type :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 110, 300, 29);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Choose Cylinder Status :");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 180, 300, 29);

        jcbCylinderStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbCylinderStatus);
        jcbCylinderStatus.setBounds(340, 180, 300, 30);

        jcbCylinderInfo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbCylinderInfo);
        jcbCylinderInfo.setBounds(340, 40, 300, 30);

        jcbStockType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(jcbStockType);
        jcbStockType.setBounds(340, 110, 300, 30);

        jtfQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfQuantityKeyTyped(evt);
            }
        });
        getContentPane().add(jtfQuantity);
        jtfQuantity.setBounds(340, 250, 300, 30);

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        btnAdd.setText("Add Cylinder Stock");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd);
        btnAdd.setBounds(100, 310, 500, 70);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String message = "";
        try {
            String quantity = jtfQuantity.getText().trim();
            String stocktype = jcbStockType.getSelectedItem().toString();
            String cylinderstatus = jcbCylinderStatus.getSelectedItem().toString();
            if (Checks.isEmpty(quantity)) {
                message = "Please Enter Some Value in Quantity Box";
            } else if (stocktype.contains("Select") || cylinderstatus.contains("Select")) {
                message = "Please Choose Any Cylinder Status and Stock Type";
            } else if (!(jcbCylinderInfo.getSelectedItem() instanceof CylinderInfoTO)) {
                message = " Please Choose Any Cylinder ";
            } else if (Checks.isNumeric(quantity)) {
                CylinderInfoTO cit = (CylinderInfoTO) jcbCylinderInfo.getSelectedItem();
                CylinderStockTO data = new CylinderStockTO();
                data.setStockType(stocktype);
                data.setCylinderStatus(cylinderstatus);
                int demandedQuantity = Integer.parseInt(quantity);
                data.setQuantity(demandedQuantity);
                data.setCylinderID(cit.getCylinderID());
                CylinderStockDAO action = new CylinderStockDAO();
                if (stocktype.equalsIgnoreCase("IN")) {
                    if (action.insertRecord(data)) {
                        message = "Cylinder Stock is Added Successfully";
                        if (cylinderstatus.equalsIgnoreCase("Fill")) {
                            new CylinderInfoDAO().updateInFilledQuantity(cit.getCylinderID(), demandedQuantity);
                        } else if (cylinderstatus.equalsIgnoreCase("Empty")) {
                            new CylinderInfoDAO().updateInEmptyQuantity(cit.getCylinderID(), demandedQuantity);
                        }
                    } else {
                        message = action.getErrorMessage();
                    }
                } else if (stocktype.equalsIgnoreCase("OUT")) {
                    if (cylinderstatus.equalsIgnoreCase("Fill")) {
                        if(cit.getFilledQty() >= demandedQuantity){
                            if(action.insertRecord(data)){
                                message = "Cylinder Stock is Added Successfully";
                                new CylinderInfoDAO().updateInFilledQuantity(cit.getCylinderID(), demandedQuantity * -1);
                            }else{
                                message = action.getErrorMessage();
                            }
                        }else{
                            message = "Out of Stock";
                        }
                    } else if (cylinderstatus.equalsIgnoreCase("Empty")) {
                        if(cit.getEmptyQty()>= demandedQuantity){
                            if(action.insertRecord(data)){
                                message = "Cylinder Stock is Added Successfully";
                                new CylinderInfoDAO().updateInEmptyQuantity(cit.getCylinderID(), demandedQuantity * -1);
                            }else{
                                message = action.getErrorMessage();
                            }
                        }else{
                            message = "Out of Stock";
                        }
                    }
                }
            } else {
                message = "Please Enter Numeric value in Quantity Box";
            }
        } catch (Exception ex) {
            message = ex.getMessage();
        }
        JOptionPane.showMessageDialog(this, message);
    }//GEN-LAST:event_btnAddActionPerformed

    private void jtfQuantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfQuantityKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            if (evt.getKeyChar() != '\b') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_jtfQuantityKeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox jcbCylinderInfo;
    private javax.swing.JComboBox jcbCylinderStatus;
    private javax.swing.JComboBox jcbStockType;
    private javax.swing.JTextField jtfQuantity;
    // End of variables declaration//GEN-END:variables
}
